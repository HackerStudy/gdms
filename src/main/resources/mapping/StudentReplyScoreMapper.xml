<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gdms.dao.StudentReplyScoreMapper" >
  <resultMap id="BaseResultMap" type="com.gdms.model.StudentReplyScore" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="sid" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="open_topic_score" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="mid_score" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="graduate_score" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>

  <resultMap id="StudentReplyScoreVoMap" type="StudentReplyScoreVo" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="sid" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="open_topic_score" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="mid_score" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="graduate_score" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>

  <sql id="Base_Column_List" >
    id, sid, open_topic_score, mid_score, graduate_score
  </sql>
  <select id="queryStudentReplyScoreBySid" resultType="StudentReplyScore" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from student_reply_score
    where sid = #{sid,jdbcType=VARCHAR}
  </select>
  <!--<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >-->
    <!--delete from student_reply_score-->
    <!--where id = #{id,jdbcType=INTEGER}-->
  <!--</delete>-->
  <!--<insert id="insert" parameterType="com.gdms.model.StudentReplyScoreVo" >-->
    <!--insert into student_reply_score (id, sid, open_topic_score, -->
      <!--mid_score, graduate_score)-->
    <!--values (#{id,jdbcType=INTEGER}, #{sid,jdbcType=VARCHAR}, #{openTopicScore,jdbcType=INTEGER}, -->
      <!--#{midScore,jdbcType=INTEGER}, #{graduateScore,jdbcType=INTEGER})-->
  <!--</insert>-->
  <insert id="insertStudentReplyScore" parameterType="com.gdms.model.StudentReplyScore" >
    insert into student_reply_score
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sid != null" >
        sid,
      </if>
      <if test="openTopicScore != null" >
        open_topic_score,
      </if>
      <if test="midScore != null" >
        mid_score,
      </if>
      <if test="graduateScore != null" >
        graduate_score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sid != null" >
        #{sid,jdbcType=VARCHAR},
      </if>
      <if test="openTopicScore != null" >
        #{openTopicScore,jdbcType=INTEGER},
      </if>
      <if test="midScore != null" >
        #{midScore,jdbcType=INTEGER},
      </if>
      <if test="graduateScore != null" >
        #{graduateScore,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <!--<update id="updateByPrimaryKeySelective" parameterType="com.gdms.model.StudentReplyScoreVo" >-->
    <!--update student_reply_score-->
    <!--<set >-->
      <!--<if test="sid != null" >-->
        <!--sid = #{sid,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="openTopicScore != null" >-->
        <!--open_topic_score = #{openTopicScore,jdbcType=INTEGER},-->
      <!--</if>-->
      <!--<if test="midScore != null" >-->
        <!--mid_score = #{midScore,jdbcType=INTEGER},-->
      <!--</if>-->
      <!--<if test="graduateScore != null" >-->
        <!--graduate_score = #{graduateScore,jdbcType=INTEGER},-->
      <!--</if>-->
    <!--</set>-->
    <!--where id = #{id,jdbcType=INTEGER}-->
  <!--</update>-->
  <!--<update id="updateByPrimaryKey" parameterType="com.gdms.model.StudentReplyScoreVo" >-->
    <!--update student_reply_score-->
    <!--set sid = #{sid,jdbcType=VARCHAR},-->
      <!--open_topic_score = #{openTopicScore,jdbcType=INTEGER},-->
      <!--mid_score = #{midScore,jdbcType=INTEGER},-->
      <!--graduate_score = #{graduateScore,jdbcType=INTEGER}-->
    <!--where id = #{id,jdbcType=INTEGER}-->
  <!--</update>-->

  <select id="queryStuentReplyScoreVoByTid" resultMap="StudentReplyScoreVoMap" parameterType="java.lang.String">
  select
  a.id,a.sid,b.name,a.open_topic_score,a.mid_score,a.graduate_score
  from student_reply_score a
  INNER  JOIN student b ON a.sid=b.sid
  inner join advise_teacherandstudent c on a.sid=c.sid
  where c.tid=#{tid,jdbcType=VARCHAR}
</select>

  <select id="queryCountStuentReplyScoreVoByTid" resultType="java.lang.Integer" parameterType="java.lang.String">
    select
    COUNT(*)
    from student_reply_score a
    INNER  JOIN student b ON a.sid=b.sid
    inner join advise_teacherandstudent c on a.sid=c.sid
    where c.tid=#{tid,jdbcType=VARCHAR}
  </select>

  <select id="queryStuentReplyScoreVoByGid" resultMap="StudentReplyScoreVoMap" parameterType="java.lang.Integer">
    select
    a.id,a.sid,b.name,a.open_topic_score,a.mid_score,a.graduate_score
    from student_reply_score a
    INNER  JOIN student b ON a.sid=b.sid
    inner JOIN  reply_group_student c on a.sid=c.sid
    where c.gid=#{gid,jdbcType=INTEGER}
  </select>

  <select id="queryCountStuentReplyScoreVoByGid" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select
    COUNT(*)
    from student_reply_score a
    INNER  JOIN student b ON a.sid=b.sid
    inner JOIN  reply_group_student c on a.sid=c.sid
    where c.gid=#{gid,jdbcType=INTEGER}
  </select>

</mapper>