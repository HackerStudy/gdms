<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gdms.dao.AdviserScoreMapper" >
  <resultMap id="BaseResultMap" type="com.gdms.model.AdviserScore" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="tid" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="adviser_score" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="sid" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>

  <resultMap id="EntryAdviserScoreMap" type="EntryAdviserScore" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="sid" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="adviser_score" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>

  <sql id="Base_Column_List" >
    id, tid, adviser_score, sid
  </sql>
  <select id="queryAdviserScoreByTid" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from adviser_score
    where tid = #{tid,jdbcType=VARCHAR}
  </select>
  <!--<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >-->
    <!--delete from adviser_score-->
    <!--where id = #{id,jdbcType=INTEGER}-->
  <!--</delete>-->
  <!--<insert id="insert" parameterType="com.gdms.model.AdviserScore" >-->
    <!--insert into adviser_score (id, tid, adviser_score, -->
      <!--sid)-->
    <!--values (#{id,jdbcType=INTEGER}, #{tid,jdbcType=VARCHAR}, #{adviserScore,jdbcType=INTEGER}, -->
      <!--#{sid,jdbcType=VARCHAR})-->
  <!--</insert>-->
  <insert id="insertAdviseScore" parameterType="com.gdms.model.AdviserScore" >
  insert into adviser_score
  <trim prefix="(" suffix=")" suffixOverrides="," >
    <if test="id != null" >
      id,
    </if>
    <if test="tid != null" >
      tid,
    </if>
    <if test="adviserScore != null" >
      adviser_score,
    </if>
    <if test="sid != null" >
      sid,
    </if>
  </trim>
  <trim prefix="values (" suffix=")" suffixOverrides="," >
    <if test="id != null" >
      #{id,jdbcType=INTEGER},
    </if>
    <if test="tid != null" >
      #{tid,jdbcType=VARCHAR},
    </if>
    <if test="adviserScore != null" >
      #{adviserScore,jdbcType=INTEGER},
    </if>
    <if test="sid != null" >
      #{sid,jdbcType=VARCHAR},
    </if>
  </trim>
</insert>

  <update id="updateAdviseScoreBySid" parameterType="com.gdms.model.AdviserScore" >
    update adviser_score
    <set >
      <if test="adviserScore != null" >
        adviser_score = #{adviserScore,jdbcType=INTEGER},
      </if>
    </set>
    where sid = #{sid,jdbcType=VARCHAR}
  </update>
  <!--<update id="updateByPrimaryKey" parameterType="com.gdms.model.AdviserScore" >-->
    <!--update adviser_score-->
    <!--set tid = #{tid,jdbcType=VARCHAR},-->
      <!--adviser_score = #{adviserScore,jdbcType=INTEGER},-->
      <!--sid = #{sid,jdbcType=VARCHAR}-->
    <!--where id = #{id,jdbcType=INTEGER}-->
  <!--</update>-->

  <select id="queryEntryAdviserScoreByTid" resultMap="EntryAdviserScoreMap" parameterType="java.lang.String">
    select
    a.id,a.sid,a.name,b.adviser_score
    from student a
    INNER  JOIN adviser_score b ON a.sid=b.sid
    inner JOIN  advise_teacherandstudent c on a.sid=c.sid
    where c.tid=#{tid,jdbcType=VARCHAR}
  </select>

  <select id="queryCountEntryAdviserScoreByTid" resultType="java.lang.Integer" parameterType="java.lang.String">
    select
    COUNT(*)
     from student a
    INNER  JOIN adviser_score b ON a.sid=b.sid
    inner JOIN  advise_teacherandstudent c on a.sid=c.sid
    where c.tid=#{tid,jdbcType=VARCHAR}
  </select>

</mapper>