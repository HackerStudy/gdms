<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdms.dao.ReplyGroupStudentMapper">
  <resultMap id="BaseResultMap" type="com.gdms.model.ReplyGroupStudent">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="sid" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="gid" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>

  <resultMap id="ReplyStudentVoMap" type="ReplyStudentVo" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="sid" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="sex_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="department_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="major_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="grade" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="sclass" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="phone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="tname" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>

  <sql id="Base_Column_List">
    id, sid, gid
  </sql>

  <select id="queryReplyStudentVo" resultMap="ReplyStudentVoMap">
    select
    a.id,a.sid,a.name,e.sex_name,c.department_name,d.major_name,a.grade,a.sclass,a.phone,a.email,b.tname
    from student a
    inner JOIN teacher b on a.adviserid=b.id
    INNER  JOIN department c ON a.did=c.did
    inner join major d on a.mid=d.mid
    inner join sex e on a.sex=e.id
  </select>
  <select id="queryReplyGroupStudentBySid" parameterType="java.lang.String" resultType="ReplyGroupStudent">
    select
    <include refid="Base_Column_List" />
    from reply_group_student
    where sid = #{sid,jdbcType=VARCHAR}
  </select>

  <select id="queryReplyStudentVoByGid" resultMap="ReplyStudentVoMap">
  select
  a.id,a.sid,a.name,e.sex_name,c.department_name,d.major_name,a.grade,a.sclass,a.phone,a.email,b.tname
  from student a
  inner JOIN teacher b on a.adviserid=b.id
  INNER  JOIN department c ON a.did=c.did
  inner join major d on a.mid=d.mid
  inner join sex e on a.sex=e.id
  inner join reply_group_student f on a.sid=f.sid
  where f.gid=#{gid,jdbcType=INTEGER}
</select>

  <select id="queryCountReplyStudentVoByGid" resultType="java.lang.Integer">
    select
    COUNT(*)
    from student a
    inner JOIN teacher b on a.adviserid=b.id
    INNER  JOIN department c ON a.did=c.did
    inner join major d on a.mid=d.mid
    inner join sex e on a.sex=e.id
    inner join reply_group_student f on a.sid=f.sid
    where f.gid=#{gid,jdbcType=INTEGER}
  </select>
  <!--<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">-->
    <!--delete from reply_group_teacher-->
    <!--where id = #{id,jdbcType=INTEGER}-->
  <!--</delete>-->
  <!--<insert id="insert" parameterType="com.gdms.model.ReplyGroupStudent">-->
    <!--insert into reply_group_teacher (id, tid, gid)-->
    <!--values (#{id,jdbcType=INTEGER}, #{tid,jdbcType=VARCHAR}, #{gid,jdbcType=INTEGER})-->
  <!--</insert>-->
  <insert id="insertReplyGroupStudent" parameterType="com.gdms.model.ReplyGroupStudent">
    insert into reply_group_student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sid != null">
        sid,
      </if>
      <if test="gid != null">
        gid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sid != null">
        #{sid,jdbcType=VARCHAR},
      </if>
      <if test="gid != null">
        #{gid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <!--<update id="updateByPrimaryKeySelective" parameterType="com.gdms.model.ReplyGroupStudent">-->
    <!--update reply_group_teacher-->
    <!--<set>-->
      <!--<if test="tid != null">-->
        <!--tid = #{tid,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="gid != null">-->
        <!--gid = #{gid,jdbcType=INTEGER},-->
      <!--</if>-->
    <!--</set>-->
    <!--where id = #{id,jdbcType=INTEGER}-->
  <!--</update>-->
  <!--<update id="updateByPrimaryKey" parameterType="com.gdms.model.ReplyGroupStudent">-->
    <!--update reply_group_teacher-->
    <!--set tid = #{tid,jdbcType=VARCHAR},-->
      <!--gid = #{gid,jdbcType=INTEGER}-->
    <!--where id = #{id,jdbcType=INTEGER}-->
  <!--</update>-->
  <!--<resultMap id="BaseResultMap" type="com.gdms.model.ReplyGroupStudent">-->
    <!--<constructor>-->
      <!--<idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />-->
      <!--<arg column="sid" javaType="java.lang.String" jdbcType="VARCHAR" />-->
      <!--<arg column="gid" javaType="java.lang.Integer" jdbcType="INTEGER" />-->
    <!--</constructor>-->
  <!--</resultMap>-->
  <!--<sql id="Base_Column_List">-->
    <!--id, sid, gid-->
  <!--</sql>-->
  <!--<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">-->
    <!--select -->
    <!--<include refid="Base_Column_List" />-->
    <!--from reply_group_student-->
    <!--where id = #{id,jdbcType=INTEGER}-->
  <!--</select>-->
  <!--<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">-->
    <!--delete from reply_group_student-->
    <!--where id = #{id,jdbcType=INTEGER}-->
  <!--</delete>-->
  <!--<insert id="insert" parameterType="com.gdms.model.ReplyGroupStudent">-->
    <!--insert into reply_group_student (id, sid, gid)-->
    <!--values (#{id,jdbcType=INTEGER}, #{sid,jdbcType=VARCHAR}, #{gid,jdbcType=INTEGER})-->
  <!--</insert>-->
  <!--<insert id="insertSelective" parameterType="com.gdms.model.ReplyGroupStudent">-->
    <!--insert into reply_group_student-->
    <!--<trim prefix="(" suffix=")" suffixOverrides=",">-->
      <!--<if test="id != null">-->
        <!--id,-->
      <!--</if>-->
      <!--<if test="sid != null">-->
        <!--sid,-->
      <!--</if>-->
      <!--<if test="gid != null">-->
        <!--gid,-->
      <!--</if>-->
    <!--</trim>-->
    <!--<trim prefix="values (" suffix=")" suffixOverrides=",">-->
      <!--<if test="id != null">-->
        <!--#{id,jdbcType=INTEGER},-->
      <!--</if>-->
      <!--<if test="sid != null">-->
        <!--#{sid,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="gid != null">-->
        <!--#{gid,jdbcType=INTEGER},-->
      <!--</if>-->
    <!--</trim>-->
  <!--</insert>-->
  <!--<update id="updateByPrimaryKeySelective" parameterType="com.gdms.model.ReplyGroupStudent">-->
    <!--update reply_group_student-->
    <!--<set>-->
      <!--<if test="sid != null">-->
        <!--sid = #{sid,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="gid != null">-->
        <!--gid = #{gid,jdbcType=INTEGER},-->
      <!--</if>-->
    <!--</set>-->
    <!--where id = #{id,jdbcType=INTEGER}-->
  <!--</update>-->
  <!--<update id="updateByPrimaryKey" parameterType="com.gdms.model.ReplyGroupStudent">-->
    <!--update reply_group_student-->
    <!--set sid = #{sid,jdbcType=VARCHAR},-->
      <!--gid = #{gid,jdbcType=INTEGER}-->
    <!--where id = #{id,jdbcType=INTEGER}-->
  <!--</update>-->

  <select id="queryReplyGroupStudentByGid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from reply_group_student
    where gid = #{gid,jdbcType=INTEGER}
  </select>
</mapper>