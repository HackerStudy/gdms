<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gdms.dao.StudentScoreMapper" >
  <resultMap id="BaseResultMap" type="com.gdms.model.StudentScore" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="sid" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="adviser_score" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="reply_score" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="paper_score" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="total_score" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="pass_status" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>

  <resultMap id="StudentScoreVoMap" type="StudentScoreVo" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="sid" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="adviser_score" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="reply_score" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="paper_score" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="total_score" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>

  <resultMap id="ConfirmScoreMap" type="ConfirmScore" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="sid" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="adviser_score" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="reply_score" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="paper_score" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>

  <sql id="Base_Column_List" >
    id, sid, adviser_score, reply_score, paper_score, total_score, pass_status
  </sql>
  <select id="queryStudentScoreBySid" resultType="StudentScore" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from student_score
    where sid = #{sid,jdbcType=VARCHAR}
  </select>
  <!--<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >-->
    <!--delete from student_score-->
    <!--where id = #{id,jdbcType=INTEGER}-->
  <!--</delete>-->
  <!--<insert id="insert" parameterType="com.gdms.model.StudentScore" >-->
    <!--insert into student_score (id, sid, adviser_score, -->
      <!--reply_score, paper_score, total_score, -->
      <!--pass_status)-->
    <!--values (#{id,jdbcType=INTEGER}, #{sid,jdbcType=VARCHAR}, #{adviserScore,jdbcType=INTEGER}, -->
      <!--#{replyScore,jdbcType=INTEGER}, #{paperScore,jdbcType=INTEGER}, #{totalScore,jdbcType=INTEGER}, -->
      <!--#{passStatus,jdbcType=INTEGER})-->
  <!--</insert>-->
  <insert id="insertStudentScore" parameterType="com.gdms.model.StudentScore" >
    insert into student_score
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sid != null" >
        sid,
      </if>
      <if test="adviserScore != null" >
        adviser_score,
      </if>
      <if test="replyScore != null" >
        reply_score,
      </if>
      <if test="paperScore != null" >
        paper_score,
      </if>
      <if test="totalScore != null" >
        total_score,
      </if>
      <if test="passStatus != null" >
        pass_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sid != null" >
        #{sid,jdbcType=VARCHAR},
      </if>
      <if test="adviserScore != null" >
        #{adviserScore,jdbcType=INTEGER},
      </if>
      <if test="replyScore != null" >
        #{replyScore,jdbcType=INTEGER},
      </if>
      <if test="paperScore != null" >
        #{paperScore,jdbcType=INTEGER},
      </if>
      <if test="totalScore != null" >
        #{totalScore,jdbcType=INTEGER},
      </if>
      <if test="passStatus != null" >
        #{passStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <!--<update id="updateByPrimaryKeySelective" parameterType="com.gdms.model.StudentScore" >-->
  <!--update student_score-->
  <!--<set >-->
  <!--<if test="sid != null" >-->
  <!--sid = #{sid,jdbcType=VARCHAR},-->
  <!--</if>-->
  <!--<if test="adviserScore != null" >-->
  <!--adviser_score = #{adviserScore,jdbcType=INTEGER},-->
  <!--</if>-->
  <!--<if test="replyScore != null" >-->
  <!--reply_score = #{replyScore,jdbcType=INTEGER},-->
  <!--</if>-->
  <!--<if test="paperScore != null" >-->
  <!--paper_score = #{paperScore,jdbcType=INTEGER},-->
  <!--</if>-->
  <!--<if test="totalScore != null" >-->
  <!--total_score = #{totalScore,jdbcType=INTEGER},-->
  <!--</if>-->
  <!--<if test="passStatus != null" >-->
  <!--pass_status = #{passStatus,jdbcType=INTEGER},-->
  <!--</if>-->
  <!--</set>-->
  <!--where id = #{id,jdbcType=INTEGER}-->
  <!--</update>-->
  <!--<update id="updateByPrimaryKey" parameterType="com.gdms.model.StudentScore" >-->
    <!--update student_score-->
    <!--set sid = #{sid,jdbcType=VARCHAR},-->
      <!--adviser_score = #{adviserScore,jdbcType=INTEGER},-->
      <!--reply_score = #{replyScore,jdbcType=INTEGER},-->
      <!--paper_score = #{paperScore,jdbcType=INTEGER},-->
      <!--total_score = #{totalScore,jdbcType=INTEGER},-->
      <!--pass_status = #{passStatus,jdbcType=INTEGER}-->
    <!--where id = #{id,jdbcType=INTEGER}-->
  <!--</update>-->

  <select id="queryStudentScoreVoByTid" resultMap="StudentScoreVoMap" parameterType="java.lang.String">
    select
    b.id,a.sid,a.name,b.adviser_score,b.reply_score,b.paper_score,b.total_score
     from  student a
     LEFT  JOIN  student_score b ON a.sid=b.sid
    inner JOIN  advise_teacherandstudent c on c.sid=a.sid
    where c.tid=#{tid,jdbcType=VARCHAR}
  </select>

  <select id="queryCountStudentScoreVoByTid" resultType="java.lang.Integer" parameterType="java.lang.String">
    select
    COUNT(*)
     from  student a
     LEFT  JOIN  student_score b ON a.sid=b.sid
    inner JOIN  advise_teacherandstudent c on c.sid=a.sid
    where c.tid=#{tid,jdbcType=VARCHAR}
  </select>

  <select id="queryStudentScoreVoByGid" resultMap="StudentScoreVoMap" parameterType="java.lang.Integer">
    select
    b.id,a.sid,a.name,b.adviser_score,b.reply_score,b.paper_score,b.total_score
     from  student a
     LEFT  JOIN  student_score b ON a.sid=b.sid
    inner join reply_group_student c on c.sid=a.sid
    where c.gid=#{gid,jdbcType=INTEGER}
  </select>

  <select id="queryCountStudentScoreVoByGid" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select
    COUNT(*)
    from  student a
     LEFT  JOIN  student_score b ON a.sid=b.sid
    inner join reply_group_student c on c.sid=a.sid
    where c.gid=#{gid,jdbcType=INTEGER}
  </select>

  <select id="queryStudentScoreVo" resultMap="StudentScoreVoMap">
    select
    b.id,a.sid,a.name,b.adviser_score,b.reply_score,b.paper_score,b.total_score
    from  student a
    LEFT  JOIN  student_score b ON a.sid=b.sid
  </select>

  <select id="queryCountStudentScoreVo" resultType="java.lang.Integer">
    select
    COUNT(*)
     from  student a
    LEFT  JOIN  student_score b ON a.sid=b.sid
  </select>

  <select id="queryFinalScoreVo" resultMap="ConfirmScoreMap">
    select
    a.id,a.sid,a.name,b.adviser_score,c.reply_score,d.paper_score
    from student a
    INNER JOIN adviser_score b ON a.sid=b.sid
    inner JOIN reply_score c on c.sid=a.sid
    INNER JOIN paper_score d on d.sid=a.sid
  </select>

  <select id="queryCountFinalScoreVo" resultType="java.lang.Integer">
    select
    COUNT(*)
     from student a
    INNER JOIN adviser_score b ON a.sid=b.sid
    inner JOIN reply_score c on c.sid=a.sid
    INNER JOIN paper_score d on d.sid=a.sid
  </select>
</mapper>