<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gdms.dao.PaperScoreMapper" >
  <resultMap id="BaseResultMap" type="com.gdms.model.PaperScore" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="sid" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="paper_score" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>

  <resultMap id="EntryPaperScoreMap" type="EntryPaperScore" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="sid" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="paper_score" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>

  <sql id="Base_Column_List" >
    id, sid, paper_score
  </sql>

  <select id="queryPaperScoreByTid" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from paper_score
    where gid = #{gid,jdbcType=INTEGER}
  </select>
  <!--<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >-->
    <!--delete from paper_score-->
    <!--where id = #{id,jdbcType=INTEGER}-->
  <!--</delete>-->
  <!--<insert id="insert" parameterType="com.gdms.model.PaperScore" >-->
    <!--insert into paper_score (id, sid, paper_score-->
      <!--)-->
    <!--values (#{id,jdbcType=INTEGER}, #{sid,jdbcType=VARCHAR}, #{paperScore,jdbcType=INTEGER}-->
      <!--)-->
  <!--</insert>-->
  <insert id="insertPaperScore" parameterType="com.gdms.model.PaperScore" >
    insert into paper_score
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sid != null" >
        sid,
      </if>
      <if test="paperScore != null" >
        paper_score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sid != null" >
        #{sid,jdbcType=VARCHAR},
      </if>
      <if test="paperScore != null" >
        #{paperScore,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updatePaperScoreBySid" parameterType="com.gdms.model.PaperScore" >
    update paper_score
    <set >
      <if test="paperScore != null" >
        paper_score = #{paperScore,jdbcType=INTEGER},
      </if>
    </set>
    where sid = #{sid,jdbcType=VARCHAR}
  </update>
  <!--<update id="updateByPrimaryKey" parameterType="com.gdms.model.PaperScore" >-->
    <!--update paper_score-->
    <!--set sid = #{sid,jdbcType=VARCHAR},-->
      <!--paper_score = #{paperScore,jdbcType=INTEGER}-->
    <!--where id = #{id,jdbcType=INTEGER}-->
  <!--</update>-->

  <select id="queryEntryPaperScoreByGid" resultMap="EntryPaperScoreMap" parameterType="java.lang.Integer">
    select
    a.id,a.sid,a.name,b.paper_score
    from student a
    INNER  JOIN paper_score b ON a.sid=b.sid
    inner JOIN  reply_group_student c on a.sid=c.sid
    where c.gid=#{gid,jdbcType=INTEGER}
  </select>

  <select id="queryCountEntryPaperScoreByGid" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select
    COUNT(*)
     from student a
    INNER  JOIN paper_score b ON a.sid=b.sid
    inner JOIN  reply_group_student c on a.sid=c.sid
    where c.gid=#{gid,jdbcType=INTEGER}
  </select>
</mapper>